#usda 1.0
(
    defaultPrim = "Root"
    metersPerUnit = 1
    upAxis = "Y"
)

def Xform "Root"
{
    reorder nameChildren = ["scene", "SpotLight", "Cube", "Meteor", "Lever", "Sword", "Camera", "Pull_lever", "Push_lever"]
    float3 xformOp:scale = (1, 1, 1)
    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

    def Xform "SpotLight" (
        customData = {
            float3 rotationEulerHint = (-1.5707964, 0, 0)
        }
    )
    {
        quatf xformOp:orient = (0.70710677, -0.70710677, 0, 0)
        float3 xformOp:translate = (0.6663913, 4.8858542, 4.991889e-7)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

        def RealityKitComponent "SpotLight"
        {
            float attenuationRadius = 30
            token info:id = "RealityKit.SpotLight"
            float innerAngle = 180
            float intensity = 300000.94

            def RealityKitStruct "Shadow"
            {
            }
        }
    }

    def Cube "Cube" (
        active = true
        prepend apiSchemas = ["MaterialBindingAPI"]
        customData = {
            float3 rotationEulerHint = (-3.1415927, 1.0471975, -3.1415925)
        }
    )
    {
        rel material:binding = </Root/MaplePlywood> (
            bindMaterialAs = "weakerThanDescendants"
        )
        double size = 0.2
        quatf xformOp:orient = (0.49999997, -8.7238796e-8, 0.8660254, 7.560412e-8)
        float3 xformOp:scale = (5.9999995, 0.01, 3)
        float3 xformOp:translate = (0.6645649, 0.16489391, -0.1385367)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

        def Material "DefaultMaterial"
        {
            token outputs:mtlx:surface
            token outputs:realitykit:vertex
            token outputs:surface.connect = </Root/Cube/DefaultMaterial/DefaultSurfaceShader.outputs:surface>

            def Shader "DefaultSurfaceShader"
            {
                uniform token info:id = "UsdPreviewSurface"
                color3f inputs:diffuseColor = (0.99, 1, 1) (
                    colorSpace = "srgb_displayp3"
                )
                float inputs:opacity = 0
                float inputs:roughness = 0
                token outputs:surface
            }
        }

        def RealityKitComponent "Collider"
        {
            uint group = 1
            uniform token info:id = "RealityKit.Collider"
            uint mask = 4294967295
            token type = "Default"

            def RealityKitStruct "Shape"
            {
                float3 extent = (0.2, 0.2, 0.2)
                token shapeType = "Box"

                def RealityKitStruct "pose"
                {
                }
            }
        }

        def RealityKitComponent "RigidBody"
        {
            float angularDamping = 0
            bool gravityEnabled = 0
            uniform token info:id = "RealityKit.RigidBody"
            bool isCCDEnabled = 0
            float linearDamping = 0
            token motionType = "Static"

            def RealityKitStruct "massFrame"
            {
                float3 m_inertia = (0, 0, 0)
                float m_mass = 10

                def RealityKitStruct "m_pose"
                {
                }
            }

            def RealityKitStruct "material"
            {
                double dynamicFriction = 0.6
                double restitution = 0.88
                double staticFriction = 0.7
            }
        }
    }

    def "Meteor" (
        active = true
        references = @Meteor_explosion.usdz@
    )
    {
        float3 xformOp:scale = (0.001, 0.001, 0.001)
        float3 xformOp:translate = (0.640731, 0.28941464, 0.22382078)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

        def RealityKitComponent "Collider"
        {
            uint group = 1
            uniform token info:id = "RealityKit.Collider"
            uint mask = 4294967295
            token type = "Default"

            def RealityKitStruct "Shape"
            {
                float3 extent = (193.52487, 207.2991, 247.9143)
                float radius = 105
                token shapeType = "Sphere"

                def RealityKitStruct "pose"
                {
                    float3 position = (6.6407967, -8.348492, 8.33078)
                }
            }
        }

        def RealityKitComponent "RigidBody"
        {
            uniform token info:id = "RealityKit.RigidBody"
            float linearDamping = 0.0001

            def RealityKitStruct "massFrame"
            {
                float3 m_inertia = (0, 0, 0)
                float m_mass = 0.001

                def RealityKitStruct "m_pose"
                {
                }
            }

            def RealityKitStruct "material"
            {
                double dynamicFriction = 0.6
                double restitution = 0.6
                double staticFriction = 0.8
            }
        }

        def RealityKitComponent "AnimationLibrary"
        {
            token info:id = "RealityKit.AnimationLibrary"

            def RealityKitAnimationFile "default_subtree_animation"
            {
                uniform bool looping = 1
                uniform string name = "default subtree animation"
            }
        }

        def RealityKitCustomComponent "RealityKitContent_MeteorComponent"
        {
            uniform token info:id = "RealityKitContent.MeteorComponent"
        }

        def RealityKitComponent "InputTarget"
        {
            uniform token info:id = "RealityKit.InputTarget"
        }
    }

    def "Lever" (
        active = true
        customData = {
            float3 rotationEulerHint = (0, 0.52359885, 0)
        }
        references = @Semi-stylized_steampunk_lever.usdz@
    )
    {
        quatf xformOp:orient = (0.9659258, 0, 0.25881904, 0)
        float3 xformOp:scale = (0.001, 0.001, 0.001)
        float3 xformOp:translate = (0.4946506, 0.17465362, -0.51745856)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

        def RealityKitComponent "Collider"
        {
            uint group = 1
            uniform token info:id = "RealityKit.Collider"
            uint mask = 4294967295
            token type = "Default"

            def RealityKitStruct "Shape"
            {
                float3 extent = (237, 200, 152)
                token shapeType = "Box"

                def RealityKitStruct "pose"
                {
                    float3 position = (0, 92.23885, 0)
                }
            }
        }

        def RealityKitComponent "RigidBody"
        {
            uniform token info:id = "RealityKit.RigidBody"
            float linearDamping = 0.0001

            def RealityKitStruct "massFrame"
            {
                float3 m_inertia = (0, 0, 0)
                float m_mass = 0.001

                def RealityKitStruct "m_pose"
                {
                }
            }

            def RealityKitStruct "material"
            {
                double dynamicFriction = 0.6
                double restitution = 0.6
                double staticFriction = 0.8
            }
        }

        over "Materials"
        {
            over "Lever_rod_1001"
            {
                token outputs:mtlx:surface
                token outputs:realitykit:vertex
            }

            over "Lever_handle_1001"
            {
                token outputs:mtlx:surface
                token outputs:realitykit:vertex
            }

            over "Bolts_1001"
            {
                token outputs:mtlx:surface
                token outputs:realitykit:vertex
            }
        }

        over "Meshes"
        {
            over "Sketchfab_model"
            {
                over "Collada_visual_scene_group"
                {
                    over "Lever" (
                        customData = {
                            float3 rotationEulerHint = (1.570796, 0, 0)
                        }
                    )
                    {
                        quatf xformOp:orient = (0.7071069, 0.70710665, 0, 0)
                        float3 xformOp:scale = (1, 1, 1)
                        float3 xformOp:translate = (0.000897, -3.465241, 27.642525)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
                    }
                }
            }
        }

        def RealityKitComponent "InputTarget"
        {
            uniform token info:id = "RealityKit.InputTarget"
        }

        def RealityKitComponent "AnimationLibrary"
        {
            uniform token info:id = "RealityKit.AnimationLibrary"
        }

        def RealityKitComponent "RCP_BehaviorsContainer"
        {
            rel behaviors = </Root/Lever/OnTap>
            uniform token info:id = "RCP.BehaviorsContainer"
        }

        def Preliminary_Behavior "OnTap"
        {
            rel actions = </Root/Lever/OnTap/Action>
            uniform bool exclusive
            rel triggers = </Root/Lever/OnTap/Trigger>

            def Preliminary_Trigger "Trigger"
            {
                rel affectedObjects = </Root/Lever>
                token info:id = "TapGesture"
            }

            def Preliminary_Action "Action"
            {
                rel affectedObjects = </Root>
                rel animationLibraryKey = </Root/Pull_lever>
                rel animationLibraryKeyOverrideKey = </Root/Lever/OnTap/Trigger>
                token info:id = "PlayTimeline"
                int loops = 0
                int performCount = 1
                token type = "serial"
            }
        }

        def RealityKitCustomComponent "RealityKitContent_TimelineComponent"
        {
            uniform token info:id = "RealityKitContent.TimelineComponent"
        }
    }

    def "Sword" (
        active = true
        references = @Sci-Fi_Sword.usdz@
    )
    {
        float3 xformOp:scale = (0.0001, 0.0001, 0.0001)
        float3 xformOp:translate = (0.53571504, 0.17634338, -0.0116862655)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

        def RealityKitComponent "Collider"
        {
            uint group = 1
            uniform token info:id = "RealityKit.Collider"
            uint mask = 4294967295
            token type = "Default"

            def RealityKitStruct "Shape"
            {
                float3 extent = (4944.757, 299.99994, 164.302)
                token shapeType = "Box"

                def RealityKitStruct "pose"
                {
                    float3 position = (1429.0991, 2.0873184, 0)
                }
            }
        }

        def RealityKitComponent "RigidBody"
        {
            uniform token info:id = "RealityKit.RigidBody"
            float linearDamping = 0.0001

            def RealityKitStruct "massFrame"
            {
                float3 m_inertia = (0, 0, 0)
                float m_mass = 0.001

                def RealityKitStruct "m_pose"
                {
                }
            }

            def RealityKitStruct "material"
            {
                double dynamicFriction = 0.6
                double restitution = 0.6
                double staticFriction = 0.8
            }
        }

        def RealityKitComponent "Billboard"
        {
            float blendFactor = 0
            uniform token info:id = "RealityKit.Billboard"
        }

        def RealityKitCustomComponent "RealityKitContent_ObjComponent"
        {
            uniform token info:id = "RealityKitContent.ObjComponent"
        }

        def RealityKitComponent "InputTarget"
        {
            uniform token info:id = "RealityKit.InputTarget"
        }
    }

    def "Camera" (
        active = true
        customData = {
            float3 rotationEulerHint = (0, 0, 0)
        }
        references = @DslrCamera.usdz@
    )
    {
        quatf xformOp:orient = (1, 0, 0, 0)
        float3 xformOp:scale = (0.5, 0.5, 0.5)
        float3 xformOp:translate = (0.4237788, 0.161915, -0.28023455)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

        def RealityKitComponent "Collider"
        {
            uint group = 1
            uniform token info:id = "RealityKit.Collider"
            uint mask = 4294967295
            token type = "Default"

            def RealityKitStruct "Shape"
            {
                float3 extent = (0.17676455, 0.1589253, 0.1501348)
                token shapeType = "Box"

                def RealityKitStruct "pose"
                {
                    float3 position = (0.0010477789, 0.07946265, 0.002387751)
                }
            }
        }

        def RealityKitComponent "RigidBody"
        {
            uniform token info:id = "RealityKit.RigidBody"
            float linearDamping = 0.0001

            def RealityKitStruct "massFrame"
            {
                float3 m_inertia = (0, 0, 0)
                float m_mass = 0.001

                def RealityKitStruct "m_pose"
                {
                }
            }

            def RealityKitStruct "material"
            {
                double dynamicFriction = 0.6
                double restitution = 0.6
                double staticFriction = 0.8
            }
        }

        def RealityKitCustomComponent "RealityKitContent_ObjComponent"
        {
            uniform token info:id = "RealityKitContent.ObjComponent"
        }

        def RealityKitComponent "InputTarget"
        {
            uniform token info:id = "RealityKit.InputTarget"
        }
    }

    def RealityKitTimeline "Pull_lever"
    {
        def RealityKitTrack "Track"
        {
            def RealityKitAction "Transform_By"
            {
                string actionKind = "moveBy"
                int blendLayer = 300
                double duration = 1
                uniform token info:id = "DE11DDBF-AB42-4E9B-AF02-DD6C4AB1F799"
                quatf rotation = (0.9063078, 0, 0.4226182, 0)
                double startTime = 0
                rel target = </Root/Lever/Meshes/Sketchfab_model/Collada_visual_scene_group/Lever>

                def RealityKitStruct "timingFunction"
                {
                }
            }
        }
    }

    def RealityKitTimeline "Push_lever"
    {
        def RealityKitTrack "Track"
        {
            def RealityKitAction "Transform_By"
            {
                string actionKind = "moveBy"
                int blendLayer = 300
                double duration = 1
                uniform token info:id = "974F7844-D691-444A-A695-F23E88FB7A5E"
                quatf rotation = (0.9063078, 0, -0.4226182, 0)
                double startTime = 0
                rel target = </Root/Lever/Meshes/Sketchfab_model/Collada_visual_scene_group/Lever>

                def RealityKitStruct "timingFunction"
                {
                }
            }
        }
    }
}

